import pandas as pd
import openpyxl
import pyodbc
from openpyxl.utils.dataframe import dataframe_to_rows
from datetime import timedelta
from dateutil import rrule

# Define the start and end date ranges
start_date_range = pd.to_datetime('2022-08-01')
end_date_range = pd.to_datetime('2022-12-31')

# SQL Server connection details
server_name = 'chin2'
database_name = 'HomeDB'
stored_procedure = 'sample_procedure'

# Establish a connection to the SQL Server
connection = pyodbc.connect('DRIVER={SQL Server};SERVER=' + server_name + ';DATABASE=' + database_name + ';Trusted_Connection=yes;')

try:
    # Create an empty DataFrame to store the results
    df = pd.DataFrame()

    # Loop through the date range for each month
    for dt in rrule.rrule(rrule.MONTHLY, dtstart=start_date_range, until=end_date_range + timedelta(days=1)):
        # Get the start and end dates for the current month
        month_start = dt.replace(day=1)
        month_end = month_start.replace(day=pd.to_datetime(month_start).days_in_month)

        # Execute the stored procedure for each day in the current month
        for day in rrule.rrule(rrule.DAILY, dtstart=month_start, until=month_end + timedelta(days=1)):
            # Format the date as a string
            date_str = day.strftime('%Y-%m-%d')

            # Execute the stored procedure with the current date as a parameter
            cursor = connection.cursor()
            cursor.execute(f"EXEC {stored_procedure} @date='{date_str}'")

            # Fetch the results
            results = cursor.fetchall()

            # Create a DataFrame from the fetched results
            df_temp = pd.DataFrame(results)

            # Add a 'Date' column to the DataFrame
            df_temp['Date'] = day.date()

            # Concatenate the temporary DataFrame to the main DataFrame
            df = pd.concat([df, df_temp], ignore_index=True)

            # Close the cursor
            cursor.close()

        # Create a new workbook
        workbook = openpyxl.Workbook()

        # Create a sheet in the workbook with the month and year as the name
        sheet = workbook.active
        sheet.title = dt.strftime("%B%Y")

        # Write the DataFrame to the sheet
        for r in dataframe_to_rows(df, index=False, header=True):
            sheet.append(r)

        # Save the workbook with the month and year as the filename
        filename = dt.strftime("%B%Y") + '.xlsx'
        workbook.save(filename)

        # Clear the DataFrame for the next month's data
        df = pd.DataFrame()

finally:
    # Close the connection
    connection.close()
